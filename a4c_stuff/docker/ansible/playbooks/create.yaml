---
- name: Install Docker
  hosts: all
  vars:

  become: true
  tasks:
    - ansible.builtin.set_fact:
        # The baseurl of the RedHat/CentOS docker repository.
        redhat_docker_repository: "{{ REPOSITORY_URL  if (REPOSITORY_URL != '') else ('https://download.docker.com/linux/centos/7/$basearch/stable') }}"
        redhat_docker_gpgkey: "{{ DOCKER_GPGKEY if (DOCKER_GPGKEY != '') else ('https://download.docker.com/linux/centos/gpg') }}"
        # The baseurl of the Debian/Ubuntu docker repository.
        debian_docker_repository: "{{ REPOSITORY_URL if (REPOSITORY_URL != '') else ('deb https://download.docker.com/linux/ubuntu focal stable') }}"
        debian_docker_gpgkey: "{{ DOCKER_GPGKEY if (DOCKER_GPGKEY != '') else ('https://download.docker.com/linux/ubuntu/gpg') }}"
        docker_package_name:  "docker-ce{{ '-'  if (DOCKER_VERSION != '') else ('') }}{{ DOCKER_VERSION if (DOCKER_VERSION != '') else ('') }}"

    - name: Add Docker Yum repository
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repository
        baseurl: "{{redhat_docker_repository}}"
        gpgkey: "{{redhat_docker_gpgkey}}"
        gpgcheck: yes
      when: ansible_os_family == 'RedHat'

    - name: Add Docker Apt key.
      ansible.builtin.apt_key:
        url: "{{debian_docker_gpgkey}}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker Apt repository
      ansible.builtin.apt_repository:
        repo: "{{debian_docker_repository}}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: Ensure the APT package cache is updated
      ansible.builtin.apt:
        update_cache: yes
        name: apt-transport-https
        cache_valid_time: 0
      when: ansible_os_family == 'Debian'

    - name: Ensure Docker is installed
      ansible.builtin.package:
        name: "{{ docker_package_name }}"
        state: present

    - name: Enable docker service
      ansible.builtin.service:
        name: docker
        enabled: yes
