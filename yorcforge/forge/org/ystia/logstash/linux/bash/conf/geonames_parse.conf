input {
  file {
    path => [ "#GEONAMES_HOME#/data/#FNAME#.txt" ]
    codec => plain
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "geonames"
  }  
}

filter {
  if [type] == "geonames" {
    mutate {
      gsub => ["message", "\"", "?"]
    }
    csv {
      columns => ["geonameid", "name","asciiname","alternatenames","latitude","longitude","feature_class","feature_code","country_code","cc2","admin1_code","admin2_code","admin3_code","admin4_code","population","elevation","dem","timezone","mod_date"]
      separator => "	"
      add_tag => [ "geoname" ]
    }

    mutate {
      gsub => ["name", "\?", '"', 
            "asciiname", "\?", '"',  
            "alternatenames", "\?", '"']
    }

    mutate {
      split => ["alternatenames", ","]
    }

    if "geoname" in [tags] {
      mutate {
        remove_field => [ "message" ]
      }
    } else {
      mutate {
        add_tag => ["geoname_parse_failure"]
      }
    }
  }
}

output {
  if [type] == "geonames" {
    if "geoname" in [tags] {
      elasticsearch {
        hosts => [ "#ES_HOST#" ]
        index => "#INDEX#"
        document_id => "%{[geonameid]}"
      }
    } else {
      file {
        path => "#GEONAMES_HOME#/log/geonames_failed.log"
      }
      stdout {
        codec => rubydebug
      }
    }
  }
}