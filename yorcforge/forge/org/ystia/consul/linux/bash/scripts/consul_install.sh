#!/usr/bin/env bash
#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#


INSTALL_DIR=$(eval readlink -f "${INSTALL_DIR}")

source ${utils_scripts}/utils.sh
log begin
ensure_home_var_is_set

install_dnsmasq () {

    if [[ -e /etc/dnsmasq.conf ]]
    then
        if [[ "$(grep -c "This file was generated by Ystia" /etc/dnsmasq.conf)" == "0" ]]
        then
            YSTIA_DNSMASK_PREVIOUS="true"
            log info "dnsmasq previously installed"
        else
            YSTIA_DNSMASK_PREVIOUS="false"
            log info "dnsmasq not previously installed"
        fi
    else
        YSTIA_DNSMASK_PREVIOUS="false"
        log info "dnsmasq not previously installed"
    fi
    export YSTIA_DNSMASK_PREVIOUS


    if [[ ! -e /etc/dnsmasq.conf ]] || [[ "$(grep -c "This file was generated by Ystia" /etc/dnsmasq.conf)" == "0" ]]
    then

        log info "Install and configure dnsmasq..."
        if [[ "${YSTIA_DNSMASK_PREVIOUS}" == "true" ]]
        then
            # save the previous configuration
            sudo cp /etc/dnsmasq.conf /etc/dnsmasq.conf.ystiasave
        fi

        bash ${utils_scripts}/install-components.sh dnsmasq
        sudo cp ${scripts}/config/dnsmasq.conf /etc/dnsmasq.conf

        case "$(get_os_distribution)" in
            "ubuntu" | "debian" | "mint")
                # save the previous configuration
                sudo cp /etc/network/interfaces.d/eth0.cfg /etc/network/interfaces.d/eth0.cfg.ystiasave
                if [[ "${YSTIA_DNSMASK_PREVIOUS}" == "true" ]]
                then
                    sudo cp /etc/default/dnsmasq /etc/default/dnsmasq.ystiasave
                fi
                echo -e "\nIGNORE_RESOLVCONF=yes\n" | sudo tee -a /etc/default/dnsmasq > /dev/null 2>&1
                # Add 'node.dc1.ystia' as domain name
                # TODO WARNING: Not already works on Ubuntu !!!
                if [[ "`egrep -q '^[[:blank:]]*dns-nameservers' ; echo $?`" == "1" ]]
                then
                    sudo bash << EOF
                    sed -i "/iface eth0/a\dns-nameservers 127.0.0.1" /etc/network/interfaces.d/eth0.cfg
EOF
                else
                    sudo bash << EOF
                    sed -i "s/dns-nameservers/dns-nameservers 127.0.0.1/" /etc/network/interfaces.d/eth0.cfg
EOF
                fi
                if [[ "`egrep -q '^[[:blank:]]*dns-search' ; echo $?`" == "1" ]]
                then
                    sudo bash << EOF
                    sed -i "/dns-nameservers/a\dns-search node.dc1.ystia" /etc/network/interfaces.d/eth0.cfg
EOF
                else
                    sudo bash << EOF
                    sed -i "s/dns-search/dns-search node.dc1.ystia/" /etc/network/interfaces.d/eth0.cfg
EOF
                fi
                sudo ifdown eth0; sudo ifup eth0
                ;;
             "centos" | "redhat" | "fedora")
                # save the previous configuration
                sudo cp /etc/resolv.conf /etc/resolv.conf.ystiasave
                for fName in $(ls /etc/sysconfig/network-scripts/ifcfg-eth*)
                do
                    sudo cp ${fName} $(dirname ${fName})/z.$(basename ${fName}).ystiasave
                done
                # configure dnsmasq
                sudo systemctl enable dnsmasq
                sudo cp /etc/resolv.conf /etc/resolv.dnsmasq.conf
                echo -e "\nresolv-file=/etc/resolv.dnsmasq.conf\n" | sudo tee -a /etc/dnsmasq.conf > /dev/null 2>&1
                sudo sed -i -e "/PEERDNS/ s/^/#/g" /etc/sysconfig/network-scripts/ifcfg-eth*
                echo -e "\nPEERDNS=no\n" | sudo tee -a /etc/sysconfig/network-scripts/ifcfg-eth* > /dev/null 2>&1
                echo -e "# Generated with Ystia to enable dnsmasq\n\nnameserver 127.0.0.1\nsearch node.dc1.ystia\n" | sudo tee /etc/resolv.conf > /dev/null 2>&1
                ;;
        esac
        sudo service dnsmasq restart
    fi
}


if [[ "${INSTALL_DNSMASQ}" == "true" ]]; then
    log "info" "Installing DnsMasq"
    install_dnsmasq
fi

mkdir -p "${INSTALL_DIR}/work" "${INSTALL_DIR}/config"
cp ${scripts}/consul "${INSTALL_DIR}/"
chmod +x ${INSTALL_DIR}/consul

sed -e "s@#INSTALL_DIR#@${INSTALL_DIR}@g" -e "s/#IP#/${IP_ADDRESS}/g"  ${scripts}/config/1_main_conf.json > "${INSTALL_DIR}/config/1_main_conf.json"

echo "CONSUL_HOME=${INSTALL_DIR}" >${YSTIA_DIR}/consul_env.sh

# Setup systemd service
# Setup GOMAXPROCS to the number of cpu
export GOMAXPROCS=$(cat /proc/cpuinfo | grep processor | wc -l)
sudo cp ${scripts}/systemd/consul.service /etc/systemd/system/consul.service
sudo sed -i -e "s/{{USER}}/${USER}/g" -e "s@{{CONSUL_HOME}}@${INSTALL_DIR}@g" -e "s/{{GOMAXPROCS}}/${GOMAXPROCS}/g" /etc/systemd/system/consul.service
sudo systemctl daemon-reload

log end "Consul installed in ${INSTALL_DIR}"
